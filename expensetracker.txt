import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

public class ExpenseTracker {

    private static Map<String, List<Double>> expenses = new HashMap<>();

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Expense Tracker Menu:");
            System.out.println("1. Add Expense");
            System.out.println("2. View Expenses");
            System.out.println("3. Exit");

            System.out.print("Enter your choice (1-3): ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    addExpense(scanner);
                    break;
                case 2:
                    viewExpenses();
                    break;
                case 3:
                    System.out.println("Exiting Expense Tracker. Goodbye!");
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please enter a number between 1 and 3.");
            }
        }
    }

    private static void addExpense(Scanner scanner) {
        System.out.print("Enter the category of the expense: ");
        String category = scanner.next();

        System.out.print("Enter the amount of the expense: ");
        double amount = scanner.nextDouble();

        // If the category exists, add the expense to the existing list
        if (expenses.containsKey(category)) {
            expenses.get(category).add(amount);
        } else {
            // If the category doesn't exist, create a new list and add the expense
            List<Double> expenseList = new ArrayList<>();
            expenseList.add(amount);
            expenses.put(category, expenseList);
        }

        System.out.println("Expense added successfully!");
    }

    private static void viewExpenses() {
        System.out.println("\nExpense Summary:");

        if (expenses.isEmpty()) {
            System.out.println("No expenses recorded yet.");
        } else {
            for (Map.Entry<String, List<Double>> entry : expenses.entrySet()) {
                String category = entry.getKey();
                List<Double> expenseList = entry.getValue();

                double totalExpense = expenseList.stream().mapToDouble(Double::doubleValue).sum();

                System.out.println(category + ": $" + totalExpense);
            }
        }

        System.out.println();
    }
}
